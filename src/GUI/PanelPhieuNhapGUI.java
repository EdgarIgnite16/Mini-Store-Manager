package GUI;

import BUS.*;
import DTO.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.File;
import java.util.ArrayList;

public class PanelPhieuNhapGUI extends javax.swing.JPanel {
    private static MainFormGUI parentForm;
    private DefaultTableModel modelTable_PN;
    private DefaultTableModel modelTable_CTPN;

    /**
     * Creates new form PanelPhieuNhapGUI
     */
    public PanelPhieuNhapGUI() {
        initComponents();
        initTablePhieuNhap();
        initListCTPN();
    }

    public void initTablePhieuNhap() {
        String[] columnNames = new String[]{"Mã PN", "Mã NCC", "Ngày nhập"};
        modelTable_PN = new DefaultTableModel();
        modelTable_PN.setColumnIdentifiers(columnNames);

        try {
            tbDanhSachPhieuNhap.setFont(new Font("Segoe UI", 0, 12));
            tbDanhSachPhieuNhap.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            tbDanhSachPhieuNhap.setModel(modelTable_PN);
            loadTablePN(new PhieuNhapHangBUS().getData()); // gọi lại hàm load table phiếu nhập để load lại table
            tbDanhSachPhieuNhap.setDefaultEditor(Object.class, null);
            tbDanhSachPhieuNhap.addMouseListener(new MouseListener() {
                @Override
                public void mouseClicked(MouseEvent e) {

                }

                @Override
                public void mousePressed(MouseEvent e) {

                }

                @Override
                public void mouseReleased(MouseEvent e) {
                    tbDanhSachPhieuNhapMouseListener();
                }

                @Override
                public void mouseEntered(MouseEvent e) {

                }

                @Override
                public void mouseExited(MouseEvent e) {

                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
            _MessageDialogHelper.showErrorDialog(this, ex.getMessage(), "Error !");
        }
    }

    public void initListCTPN() {
        String[] columnNames = new String[]{"Mã PN", "Mã MH", "Số lượng",};
        modelTable_CTPN = new DefaultTableModel();
        modelTable_CTPN.setColumnIdentifiers(columnNames);

        tbChiTietPhieuNhap.setFont(new Font("Segoe UI", 0, 12));
        tbChiTietPhieuNhap.setModel(modelTable_CTPN);
        tbChiTietPhieuNhap.setDefaultEditor(Object.class, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        pnTimKiemPhieuNhap = new javax.swing.JPanel();
        lbMaPhieuNhap = new javax.swing.JLabel();
        lbNhaCungCap = new javax.swing.JLabel();
        lbNgayNhap = new javax.swing.JLabel();
        txtMaPhieuNhap = new javax.swing.JTextField();
        txtNhaCungCap = new javax.swing.JTextField();
        txtNgayNhap = new javax.swing.JTextField();
        btnLamMoi = new javax.swing.JButton();
        btnExportExcel = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        spDanhSachPhieuNhap = new javax.swing.JScrollPane();
        tbDanhSachPhieuNhap = new javax.swing.JTable();
        spChiTietPhieuNhap = new javax.swing.JScrollPane();
        tbChiTietPhieuNhap = new javax.swing.JTable();
        pnThanhToan = new javax.swing.JPanel();
        lbTongSoLuong = new javax.swing.JLabel();
        lbTongThanhTien = new javax.swing.JLabel();
        txtTongSoLuong = new javax.swing.JTextField();
        txtTongThanhTien = new javax.swing.JTextField();

        pnTimKiemPhieuNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        lbMaPhieuNhap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbMaPhieuNhap.setText("Mã phiếu nhập:");

        lbNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbNhaCungCap.setText("Nhà cung cấp:");

        lbNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbNgayNhap.setText("Ngày nhập: ");

        txtMaPhieuNhap.setEditable(false);
        txtMaPhieuNhap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        txtMaPhieuNhap.setFocusCycleRoot(true);

        txtNhaCungCap.setEditable(false);
        txtNhaCungCap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        txtNgayNhap.setEditable(false);
        txtNgayNhap.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setToolTipText("Làm mới lại form");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        btnExportExcel.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnExportExcel.setText("Export excel");
        btnExportExcel.setToolTipText("Làm mới lại form");
        btnExportExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportExcelActionPerformed(evt);
            }
        });

        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnTimKiemPhieuNhapLayout = new javax.swing.GroupLayout(pnTimKiemPhieuNhap);
        pnTimKiemPhieuNhap.setLayout(pnTimKiemPhieuNhapLayout);
        pnTimKiemPhieuNhapLayout.setHorizontalGroup(
                pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnTimKiemPhieuNhapLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lbMaPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                        .addComponent(lbNhaCungCap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtNgayNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                                        .addComponent(txtMaPhieuNhap, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtNhaCungCap, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(btnLamMoi, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                        .addComponent(btnExportExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                                        .addComponent(btnTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        pnTimKiemPhieuNhapLayout.setVerticalGroup(
                pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnTimKiemPhieuNhapLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbMaPhieuNhap)
                                        .addComponent(txtMaPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnExportExcel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbNhaCungCap)
                                        .addComponent(txtNhaCungCap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnTimKiem))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnTimKiemPhieuNhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbNgayNhap)
                                        .addComponent(txtNgayNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnLamMoi))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        spDanhSachPhieuNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        spDanhSachPhieuNhap.setViewportView(tbDanhSachPhieuNhap);

        spChiTietPhieuNhap.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết phiếu nhập", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N
        spChiTietPhieuNhap.setViewportView(tbChiTietPhieuNhap);

        pnThanhToan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thanh toán", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 13))); // NOI18N

        lbTongSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbTongSoLuong.setText("Tổng số lượng:");

        lbTongThanhTien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        lbTongThanhTien.setText("Tổng thành tiền:");

        txtTongSoLuong.setEditable(false);
        txtTongSoLuong.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        txtTongThanhTien.setEditable(false);
        txtTongThanhTien.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        javax.swing.GroupLayout pnThanhToanLayout = new javax.swing.GroupLayout(pnThanhToan);
        pnThanhToan.setLayout(pnThanhToanLayout);
        pnThanhToanLayout.setHorizontalGroup(
                pnThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnThanhToanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lbTongSoLuong)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTongSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(lbTongThanhTien)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTongThanhTien, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                .addContainerGap())
        );
        pnThanhToanLayout.setVerticalGroup(
                pnThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnThanhToanLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(pnThanhToanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lbTongSoLuong)
                                        .addComponent(txtTongSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtTongThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lbTongThanhTien))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(spDanhSachPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                                        .addComponent(pnTimKiemPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pnThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(spChiTietPhieuNhap))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(spChiTietPhieuNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 613, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(pnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(pnTimKiemPhieuNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(spDanhSachPhieuNhap)))
                                .addContainerGap())
        );
    }// </editor-fold>

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {
        refreshData();
    }

    private void btnExportExcelActionPerformed(java.awt.event.ActionEvent evt) {
        ArrayList<PhieuNhapHangDTO> listPN = new PhieuNhapHangBUS().getData();
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Chọn file Excel");
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(new FileNameExtensionFilter(".xlsx", "Microsoft Excel Documents"));
        int returnVal = fc.showSaveDialog(parentForm);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String path = file.getAbsolutePath().concat(".xlsx");
            _ExportExcel.ExportPhieuNhap(listPN, path); // truyền vào hàm để sử lí xuất excel

            // xuất thông báo
            _MessageDialogHelper.showMessageDialog(parentForm,
                    "Export excel thành công!", "Export thành công");
        }
    }

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {
        new DialogTimKiemGUI(new Frame(), true,"PN").setVisible(true); // mở form tìm kiếm
        PhieuNhapHangDTO phieuNhapHangDTO = _SaveData.phieunhapTimThay;
        if(phieuNhapHangDTO != null) {
            ArrayList<PhieuNhapHangDTO> listPN = new ArrayList<>();
            listPN.add(phieuNhapHangDTO); // add phiếu nhập vừa tìm được vào danh sách phiếu nhập
            ArrayList<ChiTietPhieuNhapDTO> listCTPN =
                    new ChiTietPhieuNhapBUS().getListItemByMaPN(phieuNhapHangDTO.getMaPhieuNhap());

            loadTablePN(listPN); // khởi tạo lại table phiếu nhập
            loadForm(phieuNhapHangDTO); // load thông tin lên field
            loadChiTietPhieuNhap(listCTPN); // load chi tiết phiếu nhập lên filed
            loadThanhToan(listCTPN); // load thông tin thanh toán của phiếu nhập đó

            // reset lại data tìm kiếm trong local
            _SaveData.phieunhapTimThay = null;
        }
    }

    //===================================================================================================//
    private void tbDanhSachPhieuNhapMouseListener() {
        try {
            int selectedRow = tbDanhSachPhieuNhap.getSelectedRow();
            String MaPN = String.valueOf(tbDanhSachPhieuNhap.getValueAt(selectedRow, 0));
            PhieuNhapHangDTO phieuNhapHangDTO = new PhieuNhapHangBUS().getItemByID(MaPN);

            if(phieuNhapHangDTO != null) {
                ArrayList<ChiTietPhieuNhapDTO> listCTPN =
                        new ChiTietPhieuNhapBUS().getListItemByMaPN(phieuNhapHangDTO.getMaPhieuNhap());

                loadForm(phieuNhapHangDTO); // load thông tin lên field
                loadChiTietPhieuNhap(listCTPN); // load chi tiết phiếu nhậpn lên filed
                loadThanhToan(listCTPN); // load thông tin thanh toán của phiếu nhập đó
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            _MessageDialogHelper.showErrorDialog(parentForm, "Đã có lỗi sảy ra!", "Lỗi");
        }
    }

    // hàm load phiếu nhập lên table
    private void loadTablePN(ArrayList<PhieuNhapHangDTO> listPhieuNhap) {
        modelTable_PN.setRowCount(0);
        for (PhieuNhapHangDTO item : listPhieuNhap) {
            modelTable_PN.addRow(new Object[]{
                    item.getMaPhieuNhap(),
                    item.getMaNCC(),
                    item.getNgayNhap()
            });
        }
    }

    // hàm load chi tiết của phiếu nhập được chọn
    private void loadChiTietPhieuNhap(ArrayList<ChiTietPhieuNhapDTO> listCTPN){
        if(listCTPN != null) {
            modelTable_CTPN.setRowCount(0);
            for (ChiTietPhieuNhapDTO item : listCTPN) {
                modelTable_CTPN.addRow(new Object[]{
                        item.getMaPhieuNhap(),
                        item.getMaMH(),
                        item.getSoLuong()
                });
            }
        }
    }

    // load txt thanh toán
    private void loadThanhToan(ArrayList<ChiTietPhieuNhapDTO> listCTPN) {
        int soLuong = 0;
        float thanhTien = 0;

        for(ChiTietPhieuNhapDTO item : listCTPN) {
            MatHangDTO matHangDTO = MatHangBUS.getItemByID(item.getMaMH());
            if(matHangDTO != null) {
                soLuong += item.getSoLuong(); // tính toán số lượng chung
                thanhTien += item.getSoLuong() * matHangDTO.getThanhTien(); // tính toàn thành tiền chung
            }
        }

        txtTongSoLuong.setText(String.format("%d món hàng", soLuong));
        txtTongThanhTien.setText(String.format("%.2f VNĐ", thanhTien));
    }

    // hàm load các form txt
    private void loadForm(PhieuNhapHangDTO phieuNhapHangDTO) {
        txtMaPhieuNhap.setText(phieuNhapHangDTO.getMaPhieuNhap());
        txtNhaCungCap.setText(phieuNhapHangDTO.getMaNCC());
        txtNgayNhap.setText(phieuNhapHangDTO.getNgayNhap());
    }

    // làm mới lại text field và data
    private void refreshData() {
        txtMaPhieuNhap.setText(""); // refresh form mã phiếu nhập
        txtNhaCungCap.setText(""); // refresh form tên phiếu nhập
        txtNgayNhap.setText(""); // refresh form số điện thoại
        tbDanhSachPhieuNhap.clearSelection(); // refresh selected danh sách phiếu nhập

        // set Background
        txtMaPhieuNhap.setBackground(Color.WHITE);
        txtNhaCungCap.setBackground(Color.WHITE);
        txtNgayNhap.setBackground(Color.WHITE);

        // set Foreground
        txtMaPhieuNhap.setForeground(Color.BLACK);
        txtNhaCungCap.setForeground(Color.BLACK);
        txtNgayNhap.setForeground(Color.BLACK);

        loadTablePN(new PhieuNhapHangBUS().getData()); // load form phiếu nhập
        loadChiTietPhieuNhap(new ArrayList<>()); // load lại form chi tiết
    }

    // Variables declaration - do not modify
    private javax.swing.JButton btnExportExcel;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JLabel lbMaPhieuNhap;
    private javax.swing.JLabel lbNgayNhap;
    private javax.swing.JLabel lbNhaCungCap;
    private javax.swing.JLabel lbTongSoLuong;
    private javax.swing.JLabel lbTongThanhTien;
    private javax.swing.JPanel pnThanhToan;
    private javax.swing.JPanel pnTimKiemPhieuNhap;
    private javax.swing.JScrollPane spChiTietPhieuNhap;
    private javax.swing.JScrollPane spDanhSachPhieuNhap;
    private javax.swing.JTable tbChiTietPhieuNhap;
    private javax.swing.JTable tbDanhSachPhieuNhap;
    private javax.swing.JTextField txtMaPhieuNhap;
    private javax.swing.JTextField txtNgayNhap;
    private javax.swing.JTextField txtNhaCungCap;
    private javax.swing.JTextField txtTongSoLuong;
    private javax.swing.JTextField txtTongThanhTien;
    // End of variables declaration
}
